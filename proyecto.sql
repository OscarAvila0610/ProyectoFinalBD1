/*CREAR TABLAS SECUENCIAS E INSERTS*/
create table MARCAVEHICULOS  (
   IDMARCAVEHICULO      NUMBER(6)                             not null,
   MARCAVEHICULO        VARCHAR2(25 CHAR),
   constraint PK_MARCAVEHICULOS primary key (IDMARCAVEHICULO)
);


CREATE SEQUENCE SQC_MARCAVEHICULOS
START WITH 1
MINVALUE 1
NOMAXVALUE
INCREMENT BY 1;   

SELECT * FROM MARCAVEHICULOS;

INSERT INTO MARCAVEHICULOS(IDMARCAVEHICULO,MARCAVEHICULO) VALUES (SQC_MARCAVEHICULOS.NEXTVAL,'HONDA');
INSERT INTO MARCAVEHICULOS(IDMARCAVEHICULO,MARCAVEHICULO) VALUES (SQC_MARCAVEHICULOS.NEXTVAL,'MAZDA');
INSERT INTO MARCAVEHICULOS(IDMARCAVEHICULO,MARCAVEHICULO) VALUES (SQC_MARCAVEHICULOS.NEXTVAL,'TOYOTA');
INSERT INTO MARCAVEHICULOS(IDMARCAVEHICULO,MARCAVEHICULO) VALUES (SQC_MARCAVEHICULOS.NEXTVAL,'HYUNDAI');

CREATE TABLE LINEAVEHICULOS(
    IDLINEAVEHICULO NUMBER(6) NOT NULL,
    IDMARCAVEHICULO NUMBER(6),
    NOMBRELINEA VARCHAR2(25),
    CONSTRAINT PK_LINEAVEHICULOS PRIMARY KEY(IDLINEAVEHICULO),
    CONSTRAINT FK_MARCAVEHICULOS FOREIGN KEY(IDMARCAVEHICULO) REFERENCES MARCAVEHICULOS(IDMARCAVEHICULO)
);


CREATE SEQUENCE SQC_LINEAVEHICULOS
START WITH 1
MINVALUE 1
NOMAXVALUE
INCREMENT BY 1;

INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,1,'CIVIC');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,1,'CR-V');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,2,'3');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,2,'2');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,3,'COROLLA');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,3,'YARIS');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,4,'VELOSTER');
INSERT INTO LINEAVEHICULOS(IDLINEAVEHICULO,IDMARCAVEHICULO,NOMBRELINEA) VALUES (SQC_LINEAVEHICULOS.NEXTVAL,4,'ACCENT');

CREATE TABLE MODELOVEHICULO(
    IDMODELOVEHICULO NUMBER(4) NOT NULL,
    MODELOVEHICULO NUMBER(4),
    CONSTRAINT PK_MODELOVEHICULO PRIMARY KEY(IDMODELOVEHICULO)
);    

CREATE SEQUENCE SQC_MODELOVEHICULO
START WITH 1990
MINVALUE 1
NOMAXVALUE
INCREMENT BY 1;

CREATE SEQUENCE SQC_LINEAVEHICULOS_ANIO
START WITH 1990
MINVALUE 1
NOMAXVALUE
INCREMENT BY 1;

SELECT * FROM MODELOVEHICULO;

BEGIN
    FOR F IN 0..31 LOOP
INSERT INTO MODELOVEHICULO(IDMODELOVEHICULO, MODELOVEHICULO) VALUES (SQC_MODELOVEHICULO.NEXTVAL, SQC_LINEAVEHICULOS_ANIO.NEXTVAL);
    END LOOP;
END;   

CREATE TABLE ARTICULO(
    IDARTICULO NUMBER(6),
    IDLINEAVEHICULO NUMBER(6),
    IDMODELOVEHICULO NUMBER(6),
    NOMBREARTICULO VARCHAR(50),
    PRECIOCOMPRA DECIMAL(10,2),
    PRECIOVENTA DECIMAL(10,2),
    EXISTENCIA NUMBER(6),
    CONSTRAINT PK_ARTICULO PRIMARY KEY(IDARTICULO),
    CONSTRAINT FK_LINEAVEHICULO FOREIGN KEY(IDLINEAVEHICULO) REFERENCES LINEAVEHICULOS(IDLINEAVEHICULO),
    CONSTRAINT FK_MODELOVEHICULO FOREIGN KEY(IDMODELOVEHICULO) REFERENCES MODELOVEHICULO(IDMODELOVEHICULO)
);
DROP SEQUENCE SQC_ARTICULO;
SELECT * FROM LINEAVEHICULOS;
CREATE SEQUENCE SQC_ARTICULO
START WITH 1
MINVALUE 1
NOMAXVALUE
INCREMENT BY 1;

INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 1,2000,'FAJA DE TIEMPO', 1000, 1350, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 1,2000,'FAROLES', 275, 350, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 1,2000,'RETROVISOR', 200, 350, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 2,2001,'BOBINA', 325, 475, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 2,2010,'RETROVISOR', 325, 475, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 4,2012,'LODERA', 550, 790, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 4,2015,'BOMBA DE GASOLINA', 1250, 1450, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 3,2002,'MANIFUL', 900, 1350, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 5,2006,'SENSOR DE OXIGENO', 200, 350, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 6,2009,'FILTRO DE AIRE', 150, 275, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 1,2018,'MANDO DE ACELERACION', 2200, 2750, 250);
INSERT INTO ARTICULO(IDARTICULO, IDLINEAVEHICULO, IDMODELOVEHICULO, NOMBREARTICULO,PRECIOCOMPRA,PRECIOVENTA,EXISTENCIA) VALUES (SQC_ARTICULO.NEXTVAL, 3,2020,'LODERA', 550, 790, 250);

SELECT A.IDARTICULO, M.MARCAVEHICULO, L.NOMBRELINEA, A.IDMODELOVEHICULO, A.NOMBREARTICULO, A.PRECIOVENTA, A.EXISTENCIA FROM ARTICULO A
JOIN LINEAVEHICULOS L ON A.IDLINEAVEHICULO = L.IDLINEAVEHICULO
JOIN MARCAVEHICULOS M ON L.IDMARCAVEHICULO = M.IDMARCAVEHICULO
ORDER BY M.IDMARCAVEHICULO;
SELECT A.IDARTICULO, M.MARCAVEHICULO, L.NOMBRELINEA, A.IDMODELOVEHICULO, A.NOMBREARTICULO, A.PRECIOVENTA, A.EXISTENCIA FROM ARTICULO A
JOIN LINEAVEHICULOS L ON A.IDLINEAVEHICULO = L.IDLINEAVEHICULO
JOIN MARCAVEHICULOS M ON L.IDMARCAVEHICULO = M.IDMARCAVEHICULO
WHERE M.MARCAVEHICULO LIKE '%MAZ%' OR L.NOMBRELINEA LIKE '%MAZ%' OR A.NOMBREARTICULO LIKE '%MAZ%';

CREATE TABLE CLIENTE(
    ID_CLIENTE NUMBER(6),
    NOMBRE VARCHAR2(20),
    APELLIDO VARCHAR2(20),
    NIT VARCHAR2(20),
    DIRECCION VARCHAR2(30),
    CONSTRAINT PK_CLIENTE PRIMARY KEY(ID_CLIENTE));

    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'JUAN', 'PEREZ','1234567-8', 'CIUDAD');
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'JULIO', 'LOPEZ','457459-5', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'VINICIO', 'CEREZO','74582-K', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'PABLO', 'CORTEZ','452358-9', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'LUIS', 'LUNA','2458745-1', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'OSCAR', 'AVILA','45217485-1', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'GUZMAN', 'OSORIO','6390125-4', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'GONZALO', 'JEREZ','74258965-1', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'PEDRO', 'PINEDA','7485124-1', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'CRISTIAN', 'ROCA','7452136-2', 'CIUDAD');    
INSERT INTO CLIENTE(ID_CLIENTE, NOMBRE, APELLIDO, NIT, DIRECCION) VALUES (SQC_CLIENTE.NEXTVAL, 'LUCIA', 'ROCA','74582365-1', 'CIUDAD');    


CREATE TABLE VENTA(
    ID_VENTA NUMBER(8),
    ID_CLIENTE NUMBER(6),
    FECHA DATE,
    CONSTRAINT PK_VENTA PRIMARY KEY(ID_VENTA),
    CONSTRAINT FK_VENTA_CLIENTE FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE));


INSERT INTO VENTA(ID_VENTA,ID_CLIENTE,FECHA) VALUES (SQC_VENTA.NEXTVAL,1,SYSDATE);

CREATE TABLE DETALLE_VENTA(
    ID_VENTA NUMBER(8),
    IDARTICULO NUMBER(6),
    DESCRIPCION VARCHAR(100),
    CANTIDAD NUMBER(6),
    PRECIOUNITARIO DECIMAL(10,2),
    CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY(ID_VENTA,IDARTICULO),
    CONSTRAINT FK_DETALLE_VENTA_VENTA FOREIGN KEY(ID_VENTA) REFERENCES VENTA(ID_VENTA),
    CONSTRAINT FK_DETALLE_VENTA_ARTI FOREIGN KEY(IDARTICULO) REFERENCES ARTICULO(IDARTICULO));


INSERT INTO VENTA(ID_VENTA,ID_CLIENTE, FECHA) VALUES (SQC_VENTA.NEXTVAL, 1,'18-10-2020');
INSERT INTO DETALLE_VENTA(ID_VENTA, IDARTICULO, DESCRIPCION, CANTIDAD, PRECIOUNITARIO) VALUES (1,1,'VENTA FAJA DE TIEMPO', 1,(SELECT PRECIOVENTA FROM ARTICULO WHERE IDARTICULO = 1));
INSERT INTO DETALLE_VENTA(ID_VENTA, IDARTICULO, DESCRIPCION, CANTIDAD, PRECIOUNITARIO) VALUES (1,2,'VENTA FAJA DE FAROLES', 1,(SELECT PRECIOVENTA FROM ARTICULO WHERE IDARTICULO = 2));


CREATE TABLE RES_SAT(
    SERIE VARCHAR2(30),
    RESOLUCION VARCHAR(30),
    CONSTRAINT PK_RES_SAT PRIMARY KEY(SERIE));
    
INSERT INTO RES_SAT(SERIE,RESOLUCION) VALUES ('A-1', '2020-1-53-20');    
 
 
CREATE TABLE FACTURA (
    SERIE VARCHAR2(30),
    FACTURA NUMBER(6),
    ID_VENTA NUMBER(8),
    TOTAL DECIMAL(10,2),
    CONSTRAINT PK_FACTURA PRIMARY KEY(SERIE, FACTURA),
    CONSTRAINT FK_SERIE_FACTURA FOREIGN KEY(SERIE) REFERENCES RES_SAT(SERIE),
    CONSTRAINT FK_FACTURA_VENTA FOREIGN KEY(ID_VENTA) REFERENCES VENTA(ID_VENTA));

INSERT INTO FACTURA(SERIE, FACTURA, ID_VENTA,TOTAL) VALUES ('A-1', 1,1,1700.00);
DROP TABLE FACTURA;

/*select para detalle de factura*/
SELECT P.SERIE, P.FACTURA, V.ID_VENTA, D.DESCRIPCION, A.NOMBREARTICULO, D.PRECIOUNITARIO FROM FACTURA P
JOIN VENTA V ON P.ID_VENTA = V.ID_VENTA
JOIN DETALLE_VENTA D ON P.ID_VENTA = D.ID_VENTA
JOIN ARTICULO A ON D.IDARTICULO = A.IDARTICULO where factura=3;



    
CREATE TABLE USUARIO(
    IDUSUARIO NUMBER(6),
    USUARIO VARCHAR2(30),
    PASS VARCHAR(30),
    CONSTRAINT PK_USUARIO PRIMARY KEY(IDUSUARIO));
    
INSERT INTO USUARIO(IDUSUARIO, USUARIO, PASS) VALUES (1,'oaavila', 'hola1234');    

CREATE TABLE BITACORA (
    CORRELATIVO	NUMBER(15),
    NOMBRE_TABLA VARCHAR2(30),
    USUARIO   	VARCHAR2(30),
    FECHA	DATE,
    VALOR_ANTIGUO	VARCHAR2(4000),
    VALOR_NUEVO	    VARCHAR2(4000),
    ATRIBUTO	    VARCHAR2(30),
    ATRIBUTO_LLAVE	VARCHAR2(100),
    ATRIBUTO_ORACLE	VARCHAR2(200),
    TIPO 	        VARCHAR2(200),
    CONSTRAINT PK_BITACORA PRIMARY KEY (CORRELATIVO));

CREATE SEQUENCE SQC_BITACORA
START WITH 1
MINVALUE 1
NOMAXVALUE
INCREMENT BY 1;
/*FIN CREACION DE TABLAS*/

/*Funcion para crear serie de ventas*/
CREATE OR REPLACE FUNCTION SERIE_VENTAS
RETURN NUMBER
IS
VRETURN NUMBER;
VALOR NUMBER;
BEGIN
    SELECT MAX(ID_VENTA) INTO VALOR FROM VENTA;
    VRETURN:=VALOR+1;
    RETURN VRETURN;
END;


/*Funcion para crear serie de clientes*/
CREATE OR REPLACE FUNCTION SERIE_CLIENTE
RETURN NUMBER
IS
VRETURN NUMBER;
VALOR NUMBER;
BEGIN
    SELECT MAX(ID_CLIENTE) INTO VALOR FROM CLIENTE;
    VRETURN:=VALOR+1;
    RETURN VRETURN;
END;


/*trigger para actualizar existencia*/
CREATE OR REPLACE TRIGGER TRG_AIR_VENTA
AFTER INSERT ON DETALLE_VENTA
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
NEXISTENCIA NUMBER:=0;
NCANTIDAD NUMBER:=0;
BEGIN
    BEGIN
        SELECT EXISTENCIA
        INTO NEXISTENCIA
        FROM ARTICULO
        WHERE IDARTICULO = :NEW.IDARTICULO;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
         RAISE_APPLICATION_ERROR(-20001,'EL ARTICULO QUE BUSCA NO EXISTE');     
    END;    
    BEGIN
        NCANTIDAD := NEXISTENCIA - :NEW.CANTIDAD;
        UPDATE ARTICULO SET EXISTENCIA = NCANTIDAD WHERE IDARTICULO = :NEW.IDARTICULO;
    END;     
END;


/*PROCEDIMIENTO BITACORA*/
CREATE OR REPLACE PROCEDURE PRC_BITACORA(PNOMTABLA VARCHAR2, PVALANT VARCHAR2, PVALNEW VARCHAR2,
 PATRIBUTO VARCHAR, PATRILLAVE VARCHAR2, PATRIORA VARCHAR2, PTIPO VARCHAR2) IS 
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    INSERT INTO BITACORA (CORRELATIVO, NOMBRE_TABLA, USUARIO, FECHA, VALOR_ANTIGUO, VALOR_NUEVO, ATRIBUTO,
    ATRIBUTO_LLAVE, ATRIBUTO_ORACLE, TIPO) 
    VALUES (SQC_BITACORA.NEXTVAL,PNOMTABLA,USER,SYSDATE,PVALANT,PVALNEW,PATRIBUTO, PATRILLAVE,
    PATRIORA,PTIPO);
    COMMIT;
END;

/*CREACION DE TRIGGERS */
CREATE OR REPLACE TRIGGER TRG_AIR_CLIENTE
AFTER INSERT ON CLIENTE 
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
BEGIN
   BEGIN
   PRC_BITACORA('CLIENTE', NULL, :NEW.NOMBRE, NULL, :NEW.ID_CLIENTE, :NEW.ROWID, 'INSERT'); 
   PRC_BITACORA('CLIENTE', NULL, :NEW.APELLIDO, NULL, :NEW.ID_CLIENTE, :NEW.ROWID, 'INSERT');  
   PRC_BITACORA('CLIENTE', NULL, :NEW.NIT, NULL, :NEW.ID_CLIENTE, :NEW.ROWID, 'INSERT'); 
   PRC_BITACORA('CLIENTE', NULL, :NEW.DIRECCION, NULL, :NEW.ID_CLIENTE, :NEW.ROWID, 'INSERT'); 
   END; 
END;

CREATE OR REPLACE TRIGGER TRG_AIR_VENTABITA
AFTER INSERT ON VENTA 
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
BEGIN
   BEGIN
   PRC_BITACORA('VENTA', NULL, :NEW.ID_CLIENTE, NULL, :NEW.ID_VENTA, :NEW.ROWID, 'INSERT'); 
   PRC_BITACORA('VENTA', NULL, :NEW.FECHA, NULL, :NEW.ID_VENTA, :NEW.ROWID, 'INSERT');  
   END; 
END;

CREATE OR REPLACE TRIGGER TRG_AIR_DETALLEVENTA
AFTER INSERT ON DETALLE_VENTA 
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
BEGIN
   BEGIN
   PRC_BITACORA('DETALLE_VENTA', NULL, :NEW.IDARTICULO, NULL, :NEW.ID_VENTA, :NEW.ROWID, 'INSERT'); 
   PRC_BITACORA('DETALLE_VENTA', NULL, :NEW.DESCRIPCION, NULL, :NEW.ID_VENTA, :NEW.ROWID, 'INSERT'); 
   PRC_BITACORA('DETALLE_VENTA', NULL, :NEW.CANTIDAD, NULL, :NEW.ID_VENTA, :NEW.ROWID, 'INSERT'); 
   PRC_BITACORA('DETALLE_VENTA', NULL, :NEW.PRECIOUNITARIO, NULL, :NEW.ID_VENTA, :NEW.ROWID, 'INSERT');  
   END; 
END;

CREATE OR REPLACE TRIGGER TRG_AUR_CLIENTE
AFTER UPDATE ON CLIENTE 
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
BEGIN
   BEGIN
   PRC_BITACORA('CLIENTE', :OLD.NOMBRE, :NEW.NOMBRE, 'NOMBRE', :NEW.ID_CLIENTE, :NEW.ROWID, 'UPDATE'); 
   PRC_BITACORA('CLIENTE', :OLD.APELLIDO, :NEW.APELLIDO, 'APELLIDO', :NEW.ID_CLIENTE, :NEW.ROWID, 'UPDATE');  
   PRC_BITACORA('CLIENTE', :OLD.NIT, :NEW.NIT, 'NIT', :NEW.ID_CLIENTE, :NEW.ROWID, 'UPDATE'); 
   PRC_BITACORA('CLIENTE', :OLD.DIRECCION, :NEW.DIRECCION, 'DIRECCION', :NEW.ID_CLIENTE, :NEW.ROWID, 'UPDATE');  
   END; 
END;

/*CREACION DE VISTAS*/

create or replace view v_factura
as
select
f.serie,
f.factura,
round(((f.total/1.12)*0.12),2) as iva,
f.total,
c.NOMBRE||' '||c.APELLIDO as nombre,
c.NIT,c.DIRECCION,
v.FECHA,
dv.CANTIDAD,
dv.DESCRIPCION,
dv.PRECIOUNITARIO,
(dv.PRECIOUNITARIO*dv.CANTIDAD) as totalde
from factura f
inner join venta v
on f.ID_VENTA = v.ID_VENTA
inner join cliente c
on v.ID_CLIENTE = c.ID_CLIENTE
inner join detalle_venta dv
on v.ID_VENTA = dv.ID_VENTA;

create or replace view v_facturas
as
select factura.serie, factura.factura as factura_numero, v.FECHA, cliente.NIT, cliente.NOMBRE||' '||cliente.APELLIDO as Nombre_cliente,
(select round(sum(preciounitario*cantidad),2) from detalle_venta inner join venta on detalle_venta.ID_venta = venta.ID_venta where venta.id_venta = v.id_venta ) as total_factura,
(select round(sum((preciounitario*cantidad)/1.12),2) from detalle_venta inner join venta on detalle_venta.id_venta = venta.id_venta where venta.id_venta = v.id_venta ) as total_neto,
(select round(sum(((preciounitario*cantidad)/1.12)*0.12),2) from detalle_venta inner join venta on detalle_venta.id_venta = venta.id_venta where venta.id_venta = v.id_venta ) as total_iva
from 
factura 
inner join venta v
on factura.id_venta = v.id_venta
inner join cliente 
on v.ID_CLIENTE = cliente.ID_CLIENTE;

create or replace view v_producto_cliente
as
select 
nombre ||' '||apellido as nombre_cliente,
detalle_venta.cantidad,
articulo.nombrearticulo articulo,
(detalle_venta.PRECIOUNITARIO*detalle_venta.cantidad) as total,
factura.factura
from cliente
inner join venta
on cliente.id_cliente = venta.id_cliente
inner join detalle_venta
on venta.id_venta = detalle_venta.id_venta
inner join articulo
on detalle_venta.idarticulo = articulo.idarticulo
inner join factura
on venta.id_venta = factura.ID_VENTA;

create or replace view v_reporte_ventas
as
select v.id_venta as venta_numero, v.FECHA, cliente.NIT, cliente.NOMBRE||' '||cliente.APELLIDO as Nombre_cliente, cliente.direccion as direccion_cliente,
(select sum(preciounitario*cantidad)from detalle_venta inner join venta on detalle_venta.ID_VENTA = venta.ID_VENTA where venta.id_venta = v.id_venta ) as total_venta,
(select sum(cantidad) from detalle_venta inner join venta on detalle_venta.id_venta = venta.id_venta where venta.id_venta = v.id_venta) as cantidad_productos
from 
venta v
inner join cliente 
on v.ID_CLIENTE = cliente.ID_CLIENTE;

create or replace view v_ventas_cliente
as
select 
nombre ||' '||apellido as nombre_cliente,
v.id_venta,
v.FECHA,
(select sum(preciounitario*cantidad)from detalle_venta inner join venta on detalle_venta.ID_VENTA = venta.ID_VENTA where venta.id_venta = v.id_venta ) as total_venta
from cliente
inner join venta v
on cliente.id_cliente = v.id_cliente;

COMMIT;